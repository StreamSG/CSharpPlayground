@page "/BuildACreature"
@using MudBlazor

<h3>Build a Creature!</h3>

<MudSelect T="string" Label="Head" AnchorOrigin="Origin.BottomCenter">
<MudSelectItem Value="1">Ghost Head</MudSelectItem>
    <MudSelectItem Value="2">Monster Head</MudSelectItem>
    <MudSelectItem Value="3">Bug Head</MudSelectItem>
</MudSelect>

<MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@RandomizeCreature">Randomize</MudButton>

@if (creatureString != null)
{
    <pre>@SwitchCase(randomParts.head, "head")</pre>
    <pre>@SwitchCase(randomParts.body, "body")</pre>
    <pre>@SwitchCase(randomParts.feet, "feet")</pre>
}

@code {
    private CreatureParts randomParts; // Define randomParts at the component level
    private string? creatureString;

    private void RandomizeCreature()
    {
        randomParts = RandomMode();
        creatureString = BuildCreature(randomParts.head, randomParts.body, randomParts.feet);
    }

    private struct CreatureParts
    {
        public int head;
        public int body;
        public int feet;
    }

    private string BuildCreature(int head, int body, int feet)
    {
        return $"{SwitchCase(head, "head")}\n{SwitchCase(body, "body")}\n{SwitchCase(feet, "feet")}";
    }

    private string SwitchCase(int part, string partType)
    {
        switch (partType)
        {
            case "head":
                switch (part)
                {
                    case 1: return "     ..-..\n    ( o o )\n    |  O  |";
                    case 2: return "     _____\n .-,;='';_),-.\n  \\_\\(),()/_/\n　  (,___,)";
                    case 3: return "     /   \\\n     \\. ./\n    (o + o)";
                    default: return string.Empty;
                }

            case "body":
                switch (part)
                {
                    case 1: return "    |     |\n    |     |\n    |     |";
                    case 2: return "   ,-/`~`\\-,___\n  / /).:.('--._)\n {_[ (_,_)";
                    case 3: return "  --|  |  |--\n  --|  |  |--\n  --|  |  |--";
                    default: return string.Empty;
                }

            case "feet":
                switch (part)
                {
                    case 1: return "    |     |\n    |     |\n    '~~~~~'";
                    case 2: return "    |  Y  |\n   /   |   \\\n   \"\"\"\" \"\"\"\"";
                    case 3: return "     v   v\n     *****";
                    default: return string.Empty;
                }

            default: return string.Empty;
        }
    }

    private CreatureParts RandomMode()
    {
        Random random = new Random();
        return new CreatureParts
            {
                head = random.Next(1, 4),
                body = random.Next(1, 4),
                feet = random.Next(1, 4)
            };
    }
}
